[
  {
    "db_id": "movie_platform",
    "question": "Name movie titles released in year 1945. Sort the listing by the descending order of movie popularity.",
    "evidence": "released in the year 1945 refers to movie_release_year = 1945;",
    "keywords": [
      "movie titles",
      "released",
      "1945",
      "sort",
      "descending",
      "popularity"
    ],
    "schema_linking": {
      "movies": [
        "movie_title",
        "movies",
        "movie_title_language",
        "movie_release_year",
        "movie_popularity",
        "movie_release_year",
        "movie_title",
        "movies",
        "movie_id",
        "movie_release_year",
        "movies",
        "movie_title",
        "movie_popularity",
        "movie_popularity",
        "movie_title",
        "movies",
        "movies",
        "movie_title",
        "movie_popularity",
        "movies"
      ],
      "ratings": [
        "movie_id",
        "critic",
        "ratings",
        "ratings",
        "critic",
        "ratings",
        "critic_likes",
        "rating_url"
      ],
      "lists": [
        "lists",
        "lists"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "State the most popular movie? When was it released and who is the director for the movie?",
    "evidence": "most popular movie refers to MAX(movie_popularity); when it was released refers to movie_release_year; director for the movie refers to director_name;",
    "keywords": [
      "most popular movie",
      "release date",
      "director"
    ],
    "schema_linking": {
      "movies": [
        "movie_popularity",
        "movies",
        "movie_url",
        "movie_title",
        "movie_release_year",
        "movie_release_year",
        "movie_title",
        "movie_url",
        "director_name",
        "director_id",
        "director_url",
        "movie_title",
        "movies"
      ],
      "lists_users": [
        "list_update_date_utc",
        "list_creation_date_utc"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What is the name of the longest movie title? When was it released?",
    "evidence": "longest movie title refers to MAX(LENGTH(movie_title)); when it was released refers to movie_release_year;",
    "keywords": [
      "longest movie title",
      "released"
    ],
    "schema_linking": {
      "movies": [
        "movie_title",
        "movie_title_language",
        "movie_release_year",
        "movie_url",
        "movies",
        "movie_release_year",
        "movie_title",
        "movies",
        "movie_id"
      ],
      "ratings": [
        "movie_id"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "Name the movie with the most ratings.",
    "evidence": "movie with the most rating refers to MAX(SUM(rating_score));",
    "keywords": [
      "movie",
      "most",
      "ratings"
    ],
    "schema_linking": {
      "movies": [
        "movies",
        "movie_url",
        "movie_id",
        "movie_title",
        "movies",
        "movie_popularity"
      ],
      "ratings": [
        "movie_id",
        "ratings",
        "rating_url",
        "ratings",
        "rating_url",
        "rating_score",
        "rating_id"
      ],
      "lists": [
        "lists"
      ],
      "ratings_users": [
        "ratings_users"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What is the average number of Mubi users who love movies directed by Stanley Kubrick?",
    "evidence": "average = AVG(movie_popularity); number of Mubi users who loves the movie refers to movie_popularity;",
    "keywords": [
      "average",
      "number",
      "Mubi users",
      "love",
      "movies",
      "directed by",
      "Stanley Kubrick"
    ],
    "schema_linking": {
      "ratings": [
        "ratings",
        "rating_score",
        "rating_url",
        "rating_id",
        "movie_id",
        "ratings",
        "user_trialist",
        "critic_likes",
        "ratings",
        "critic",
        "critic"
      ],
      "ratings_users": [
        "ratings_users",
        "ratings_users",
        "user_trialist"
      ],
      "lists": [
        "list_movie_number"
      ],
      "movies": [
        "movies",
        "movie_id",
        "movies",
        "movie_title",
        "movie_popularity",
        "movies",
        "movie_url",
        "movie_id",
        "movie_title",
        "movie_popularity",
        "movie_title",
        "movie_release_year",
        "movies",
        "movie_url",
        "movie_title",
        "movies",
        "movie_popularity",
        "movie_url"
      ],
      "lists_users": [
        "lists_users",
        "user_trialist"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What is the average rating for movie titled 'When Will I Be Loved'?",
    "evidence": "average rating = DIVIDE((SUM(rating_score where movie_title = 'When Will I Be Loved')), COUNT(rating_score));",
    "keywords": [
      "average rating",
      "movie titled",
      "'When Will I Be Loved'"
    ],
    "schema_linking": {
      "ratings": [
        "ratings",
        "rating_score",
        "rating_url",
        "rating_id"
      ],
      "ratings_users": [
        "ratings_users"
      ],
      "movies": [
        "movie_title",
        "movie_id",
        "movie_url",
        "movies",
        "movie_release_year",
        "movie_release_year",
        "movies",
        "movie_title"
      ],
      "lists_users": [
        "list_creation_date_utc",
        "list_update_date_utc"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What is the user avatar url for user 41579158? What is the latest movie rated by him / her?",
    "evidence": "user avatar url refers to user_avatar_image_url; latest movie rated refers to latest rating_date;",
    "keywords": [
      "user",
      "41579158",
      "avatar",
      "url",
      "latest",
      "movie",
      "rated"
    ],
    "schema_linking": {
      "lists": [
        "user_id",
        "list_url"
      ],
      "ratings_users": [
        "user_id",
        "user_trialist",
        "user_avatar_image_url",
        "ratings_users"
      ],
      "lists_users": [
        "user_id",
        "user_avatar_image_url"
      ],
      "ratings": [
        "user_id",
        "movie_id",
        "rating_id",
        "rating_url",
        "ratings",
        "rating_url",
        "ratings",
        "rating_url",
        "movie_id",
        "ratings",
        "rating_id",
        "rating_score",
        "rating_url"
      ],
      "movies": [
        "movie_id",
        "movie_url",
        "movies",
        "movie_image_url",
        "movie_url",
        "director_url",
        "movie_image_url",
        "movies",
        "movie_popularity",
        "movie_release_year",
        "movies",
        "movie_url",
        "movie_id",
        "movie_title"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What is the percentage of the ratings were rated by user who was a subcriber?",
    "evidence": "user is a subscriber refers to user_subscriber = 1; percentage of ratings = DIVIDE(SUM(user_subscriber = 1), SUM(rating_score)) as percent;",
    "keywords": [
      "percentage",
      "ratings",
      "user",
      "subscriber"
    ],
    "schema_linking": {
      "ratings": [
        "ratings",
        "rating_url",
        "rating_id",
        "rating_score",
        "ratings",
        "rating_url",
        "rating_score",
        "rating_id",
        "user_id",
        "user_subscriber"
      ],
      "movies": [
        "movie_popularity"
      ],
      "ratings_users": [
        "ratings_users",
        "user_id",
        "user_trialist",
        "user_subscriber",
        "user_avatar_image_url"
      ],
      "lists": [
        "user_id"
      ],
      "lists_users": [
        "user_id",
        "user_subscriber",
        "user_avatar_image_url"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "List all movie title rated in April 2020 from user who was a trialist.",
    "evidence": "movie title rated in April 2020 refers to rating_timestamp_utc LIKE '%2020-04-%'; user is a trial list refers to user_trialist = 1;",
    "keywords": [
      "movie title",
      "rated in April 2020",
      "user",
      "trialist"
    ],
    "schema_linking": {
      "movies": [
        "movie_title",
        "movie_title_language",
        "movies",
        "movie_url",
        "movie_release_year"
      ],
      "ratings": [
        "rating_url",
        "ratings",
        "rating_id",
        "rating_score",
        "user_id",
        "user_trialist"
      ],
      "ratings_users": [
        "rating_date_utc",
        "user_id",
        "user_trialist",
        "user_trialist",
        "user_eligible_for_trial"
      ],
      "lists": [
        "user_id"
      ],
      "lists_users": [
        "user_id",
        "user_trialist",
        "user_eligible_for_trial"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "List ther users who gave the worst rating for movie 'Love Will Tear Us Apart'.",
    "evidence": "worst rating refers to rating_score = 1;",
    "keywords": [
      "users",
      "worst",
      "rating",
      "movie",
      "Love Will Tear Us Apart"
    ],
    "schema_linking": {
      "lists": [
        "user_id"
      ],
      "ratings_users": [
        "user_id",
        "ratings_users"
      ],
      "lists_users": [
        "user_id",
        "lists_users"
      ],
      "ratings": [
        "user_id",
        "ratings",
        "rating_url",
        "ratings",
        "rating_url",
        "rating_id",
        "rating_score",
        "movie_id",
        "ratings"
      ],
      "movies": [
        "movies",
        "movie_url",
        "movie_title",
        "movies",
        "movie_url",
        "movie_id",
        "movie_title",
        "movie_title",
        "movie_release_year",
        "movies",
        "movie_url"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "List all movies with the best rating score. State the movie title and number of Mubi user who loves the movie.",
    "evidence": "best rating score refers to rating_score = 5; number of Mubi user who loves the movie refers to movie_popularity;",
    "keywords": [
      "movies",
      "best rating score",
      "movie title",
      "number of Mubi user"
    ],
    "schema_linking": {
      "movies": [
        "movies",
        "movie_url",
        "movie_id",
        "movie_title",
        "movie_popularity",
        "movie_title",
        "movie_title_language",
        "movies",
        "movie_url",
        "movie_release_year"
      ],
      "ratings": [
        "rating_score",
        "ratings",
        "rating_url",
        "rating_id"
      ],
      "ratings_users": [
        "ratings_users",
        "ratings_users",
        "user_id"
      ],
      "lists_users": [
        "lists_users",
        "user_id"
      ],
      "lists": [
        "user_id"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "For all ratings which are rated in year 2020, name the movies which has the rating scored 4 and above.",
    "evidence": "ratings in year 2020 refers to rating_timestamp_utc like '%2020%'; rating_score > = 4;",
    "keywords": [
      "ratings",
      "year",
      "2020",
      "movies",
      "rating",
      "4",
      "above"
    ],
    "schema_linking": {
      "ratings": [
        "ratings",
        "rating_url",
        "rating_score",
        "rating_id",
        "ratings",
        "critic",
        "ratings",
        "rating_url",
        "rating_id",
        "rating_score",
        "ratings",
        "rating_url",
        "ratings",
        "rating_url",
        "critic"
      ],
      "ratings_users": [
        "ratings_users",
        "ratings_users"
      ],
      "movies": [
        "movie_release_year",
        "movie_popularity",
        "movies",
        "movie_title",
        "movie_release_year",
        "movies",
        "movie_url",
        "movie_title",
        "movies",
        "movie_url",
        "movie_id",
        "movie_title",
        "movie_popularity",
        "movies",
        "movie_id",
        "movies",
        "movie_url"
      ],
      "lists": [
        "lists"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "For all movies where users left a critic, find the movie name, user, rating and critics comments from the user.",
    "evidence": "movies where users left a critic refers to critic IS NOT NULL; critic comments refers to critic;",
    "keywords": [
      "movies",
      "users",
      "critic",
      "movie name",
      "user",
      "rating",
      "critics comments"
    ],
    "schema_linking": {
      "movies": [
        "movies",
        "movie_url",
        "movie_id",
        "movie_title",
        "movie_popularity",
        "movies",
        "movie_title",
        "movies",
        "movie_id",
        "movie_url"
      ],
      "lists": [
        "user_id",
        "user_id",
        "list_comments"
      ],
      "ratings_users": [
        "user_id",
        "user_id",
        "user_trialist",
        "ratings_users"
      ],
      "lists_users": [
        "user_id",
        "lists_users",
        "user_id"
      ],
      "ratings": [
        "user_id",
        "critic",
        "critic_likes",
        "critic_comments",
        "ratings",
        "movie_id",
        "user_id",
        "ratings",
        "rating_url",
        "rating_id",
        "rating_score",
        "critic_comments",
        "critic",
        "critic_likes",
        "ratings"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "For movie titled 'Welcome to the Dollhouse', how many percentage of the ratings were rated with highest score.",
    "evidence": "rated with highest score refers to rating_score = 5; percentage = MULTIPLY(DIVIDE(SUM(rating_score = 5), COUNT(rating_score)), 100)",
    "keywords": [
      "Welcome to the Dollhouse",
      "percentage",
      "ratings",
      "highest score"
    ],
    "schema_linking": {
      "movies": [
        "movies",
        "movie_url",
        "movie_popularity",
        "movie_popularity"
      ],
      "ratings": [
        "ratings",
        "critic",
        "ratings",
        "rating_url",
        "rating_id",
        "rating_score",
        "ratings",
        "rating_url",
        "rating_score",
        "rating_id",
        "rating_score",
        "ratings",
        "rating_url",
        "rating_id"
      ],
      "lists": [
        "list_first_image_url"
      ],
      "ratings_users": [
        "ratings_users"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What is the percentage of rated movies were released in year 2021?",
    "evidence": "percentage = DIVIDE(SUM(movie_release_year = 2021), COUNT(rating_id)) as percent; movies released in year 2021 refers to movie_release_year = 2021;",
    "keywords": [
      "percentage",
      "rated movies",
      "year",
      "2021"
    ],
    "schema_linking": {
      "ratings": [
        "ratings",
        "rating_url",
        "rating_id",
        "rating_score",
        "ratings",
        "rating_url",
        "ratings",
        "ratings",
        "critic"
      ],
      "movies": [
        "movie_popularity",
        "movies",
        "movie_id",
        "movie_popularity",
        "movie_release_year",
        "movie_popularity",
        "movies",
        "movie_title",
        "movie_release_year",
        "movies",
        "movie_url"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "Who is the director of the movie Sex, Drink and Bloodshed?",
    "evidence": "Sex, Drink and Bloodshed refers to movie title = 'Sex, Drink and Bloodshed';",
    "keywords": [
      "director",
      "Sex, Drink and Bloodshed"
    ],
    "schema_linking": {
      "movies": [
        "director_name",
        "director_id",
        "director_url",
        "movie_title",
        "movies",
        "movie_title",
        "movies",
        "movie_popularity",
        "movie_url"
      ],
      "ratings": [
        "ratings"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What is the name of the most followed list?",
    "evidence": "most followed list refers to MAX(list_followers);",
    "keywords": [
      "most followed list",
      "name"
    ],
    "schema_linking": {
      "lists": [
        "list_followers",
        "lists",
        "list_url",
        "list_third_image_url",
        "list_first_image_url"
      ],
      "movies": [
        "director_name",
        "movies",
        "movie_title",
        "movie_id"
      ],
      "ratings": [
        "movie_id"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What are the URL to the list page on Mubi of the lists with followers between 1-2 and whose last update timestamp was on 2012?",
    "evidence": "URL to the list page on Mubi refers to list_url; list_followers = 1 OR list_followers = 2; last update timestamp was on 2012 refers to list_update_timestamp_utc BETWEEN '2012-1-1' AND '2012-12-31';",
    "keywords": [
      "URL",
      "list page",
      "Mubi",
      "lists",
      "followers",
      "1-2",
      "last update timestamp",
      "2012"
    ],
    "schema_linking": {
      "lists": [
        "list_url",
        "lists",
        "list_url",
        "list_title",
        "list_id",
        "lists",
        "list_id",
        "list_followers",
        "list_followers",
        "list_update_timestamp_utc",
        "list_creation_timestamp_utc"
      ],
      "movies": [
        "movie_url",
        "director_url",
        "movie_image_url",
        "movies",
        "movie_id",
        "movie_title",
        "movie_id",
        "movie_release_year",
        "movies",
        "movie_popularity",
        "movie_title"
      ],
      "ratings": [
        "rating_url",
        "movie_id",
        "ratings",
        "user_subscriber",
        "critic",
        "ratings",
        "rating_score",
        "rating_url",
        "movie_id",
        "rating_timestamp_utc",
        "critic"
      ],
      "lists_users": [
        "list_id",
        "list_id",
        "lists_users",
        "user_subscriber",
        "list_update_date_utc",
        "list_creation_date_utc"
      ],
      "ratings_users": [
        "user_subscriber"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "What is the list ID that was first created by user 85981819?",
    "evidence": "first created list refers to oldest list_creation_date_utc;",
    "keywords": [
      "list ID",
      "created by",
      "user 85981819",
      "first"
    ],
    "schema_linking": {
      "lists": [
        "list_id",
        "lists",
        "list_url",
        "user_id",
        "list_creation_timestamp_utc",
        "user_id",
        "list_first_image_url"
      ],
      "lists_users": [
        "list_id",
        "list_creation_date_utc",
        "user_trialist",
        "user_id"
      ],
      "movies": [
        "director_name",
        "movies",
        "movie_title"
      ],
      "ratings_users": [
        "user_trialist",
        "user_id",
        "user_trialist"
      ],
      "ratings": [
        "user_id",
        "critic",
        "ratings"
      ]
    }
  },
  {
    "db_id": "movie_platform",
    "question": "For movie id 1269, how many users, who was a paying subscriber and was eligible for trial when he rated the movie, gave the movie a rating score of less than or equal to 2?",
    "evidence": "paying subscriber refers to user_has_payment_method = 1; eligible for trial refers to user_eligible_for_trial = 1; rating_score< = 2;",
    "keywords": [
      "movie",
      "id",
      "1269",
      "users",
      "paying",
      "subscriber",
      "eligible",
      "trial",
      "rated",
      "movie",
      "rating",
      "score",
      "less",
      "equal",
      "2"
    ],
    "schema_linking": {
      "movies": [
        "movies",
        "movie_url",
        "movie_id",
        "movie_title",
        "movie_id",
        "movie_id",
        "movies",
        "movies",
        "movie_url",
        "movie_id",
        "movie_title",
        "movies",
        "movies",
        "movie_id"
      ],
      "ratings": [
        "movie_id",
        "movie_id",
        "movie_id",
        "user_id",
        "ratings",
        "user_has_payment_method",
        "user_subscriber",
        "user_eligible_for_trial",
        "user_trialist",
        "ratings",
        "rating_id",
        "rating_score",
        "rating_url",
        "movie_id",
        "ratings",
        "rating_url",
        "rating_id",
        "rating_score",
        "rating_score",
        "ratings",
        "rating_url",
        "rating_id",
        "ratings",
        "rating_url",
        "critic",
        "critic",
        "ratings",
        "movie_id",
        "rating_url"
      ],
      "lists": [
        "user_id",
        "user_id",
        "user_id",
        "user_id"
      ],
      "ratings_users": [
        "user_id",
        "user_id",
        "user_id",
        "user_has_payment_method",
        "user_subscriber",
        "user_avatar_image_url",
        "user_eligible_for_trial",
        "user_trialist",
        "user_trialist",
        "user_eligible_for_trial",
        "ratings_users",
        "ratings_users",
        "ratings_users",
        "user_trialist",
        "user_id"
      ],
      "lists_users": [
        "user_id",
        "user_id",
        "user_id",
        "lists_users",
        "user_has_payment_method",
        "user_subscriber",
        "user_avatar_image_url",
        "user_eligible_for_trial",
        "user_trialist",
        "user_trialist",
        "user_eligible_for_trial",
        "user_trialist",
        "user_id"
      ]
    }
  }
]